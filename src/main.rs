use std::error::Error;
use std::io::prelude::*;
use std::fs::File;
use std::path::Path;

fn node_writer(file: &mut File, topology: &Vec<Vec<i32>>) -> Result<usize, Box<Error>> {
    let mut nbytes = file.write("router\n# node\tcity\ty\tx\tmpi-partition\n".as_bytes())?;
    for i in 0..topology.len() {
        // node    city    y    x    mpi-partition
        let item = format!("Node{}\tNA\t{}\t{}\t{}\n", i, i, i, i % 5);
        nbytes += file.write(item.as_bytes())?;
    }
    nbytes += file.write("\n".as_bytes())?;
    Ok(nbytes)
}

fn link_writer(file: &mut File, topology: &Vec<Vec<i32>>) -> Result<usize, Box<Error>> {
    let capacity = 100;
    let metric = 1;
    let delay = 1;
    let mut nbytes = file.write("link\n# from\tto\tcapacity\tmetric\tdelay\tqueue\n".as_bytes())?;
    for (i, line) in topology.iter().enumerate() {
        for (j, queue) in line.iter().enumerate() {
            // 三角行列なので下半分を無視
            if i >= j {
                continue;
            }
            // queueが0以下ならばリンクしていないと同じ
            if *queue <= 0 {
                continue;
            }
            // from    to    capacity    metric    delay    queue
            let item = format!("Node{}\tNode{}\t{}Mbps\t\t{}\t{}ms\t{}\n",
                               i,
                               j,
                               capacity,
                               metric,
                               delay,
                               queue);
            nbytes += file.write(item.as_bytes())?;
        }
    }
    Ok(nbytes)
}

fn main() {
    #[allow(unused)]
    let topology3 = vec![
    //         0    1    2    3    4    5    6    7
        vec![  0, 100,   0,   0,   0,   0,   0,   0],    // 0
        vec![  0,   0, 100, 100,  50,  50,  50,  50],    // 1
        vec![  0,   0,   0,  50, 100, 100,  25,  25],    // 2
        vec![  0,   0,   0,   0,  25,  25, 100, 100],    // 3
        vec![  0,   0,   0,   0,   0,  50,  12,  12],    // 4
        vec![  0,   0,   0,   0,   0,   0,  12,  12],    // 5
        vec![  0,   0,   0,   0,   0,   0,   0,  50],    // 6
        vec![  0,   0,   0,   0,   0,   0,   0,   0],    // 7
    ];

    #[allow(unused)]
    let topology4 = vec![
            // // 0    1    2    3    4    5    6    7    8    9   10   11   12   13   14   15
        vec![  0, 100,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],//0
        vec![  0,   0, 100, 100,  50,  50,  50,  50,  25,  25,  25,  25,  25,  25,  25,  25],//1
        vec![  0,   0,   0,  50, 100, 100,  50,  50,  50,  50,  50,  12,  12,  12,  12,  12],//2
        vec![  0,   0,   0,   0,  25,  25, 100, 100,  12,  12,  12,  12,  50,  50,  50,  50],//3
        vec![  0,   0,   0,   0,   0,  50,  12,  12, 100, 100,  25,  25,   6,   6,   6,   6],//4
        vec![  0,   0,   0,   0,   0,   0,  12,  12,  25,  25, 100, 100,   6,   6,   6,   6],//5
        vec![  0,   0,   0,   0,   0,   0,   0,  50,   6,   6,   6,   6, 100, 100,  25,  25],//6
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   6,   6,   6,   6,  25,  25, 100, 100],//7
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,  50,  12,  12,   3,   3,   3,   3],//8
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  12,  12,   3,   3,   3,   3],//9
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  50,   3,   3,   3,   3],//10
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   3,   3,   3,   3],//11
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  50,  12,  12],//12
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  12,  12],//13
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  50],//14
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],//15
    ];

    #[allow(unused)]
    let topology5 = vec![
            // 0,   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,  14,  15,  16,  17,  18,  19,  20,  21,  22,  23,  24,  25,  26,  27,  28,  29,  30,  31,
        vec![  0, 100,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],//0
        vec![  0,   0, 100, 100,  50,  50,  50,  50,  25,  25,  25,  25,  25,  25,  25,  25,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12,  12],//1
        vec![  0,   0,   0,  50, 100, 100,  25,  25,  50,  50,  50,  50,  12,  12,  12,  12,  25,  25,  25,  25,  25,  25,  25,  25,   6,   6,   6,   6,   6,   6,   6,   6],//2
        vec![  0,   0,   0,   0,  25,  25, 100, 100,  12,  12,  12,  12,  50,  50,  50,  50,   6,   6,   6,   6,   6,   6,   6,   6,  25,  25,  25,  25,  25,  25,  25,  25],//3
        vec![  0,   0,   0,   0,   0,  50,  12,  12, 100, 100,  25,  25,   6,   6,   6,   6,  50,  50,  50,  50,  12,  12,  12,  12,   3,   3,   3,   3,   3,   3,   3,   3],//4
        vec![  0,   0,   0,   0,   0,   0,  12,  12,  25,  25, 100, 100,   6,   6,   6,   6,  12,  12,  12,  12,  50,  50,  50,  50,   3,   3,   3,   3,   3,   3,   3,   3],//5
        vec![  0,   0,   0,   0,   0,   0,   0,  50,   6,   6,   6,   6, 100, 100,  25,  25,   3,   3,   3,   3,   3,   3,   3,   3,  50,  50,  50,  50,  12,  12,  12,  12],//6
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   6,   6,   6,   6,  25,  25, 100, 100,   3,   3,   3,   3,   3,   3,   3,   3,  12,  12,  12,  12,  50,  50,  50,  50],//7
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,  50,  25,  25,   3,   3,   3,   3, 100, 100,  25,  25,   6,   6,   6,   6,   2,   2,   2,   2,   2,   2,   2,   2],//8
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  12,  12,   3,   3,   3,   3,  25,  25, 100, 100,   6,   6,   6,   6,   2,   2,   2,   2,   2,   2,   2,   2],//9
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  50,   3,   3,   3,   3,   6,   6,   6,   6, 100, 100,  25,  25,   2,   2,   2,   2,   2,   2,   2,   2],//10
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   3,   3,   3,   3,   6,   6,   6,   6,  25,  25, 100, 100,   2,   2,   2,   2,   2,   2,   2,   2],//11
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  50,  12,  12,   2,   2,   2,   2,   2,   2,   2,   2, 100, 100,  25,  25,   6,   6,   6,   6],//12
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  12,  12,   2,   2,   2,   2,   2,   2,   2,   2,  25,  25, 100, 100,   6,   6,   6,   6],//13
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  50,   2,   2,   2,   2,   2,   2,   2,   2,   6,   6,   6,   6, 100, 100,  25,  25],//14
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   2,   2,   2,   2,   2,   2,   2,   2,   6,   6,   6,   6,  25,  25, 100, 100],//15
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  50,  12,  12,   3,   3,   3,   3,   1,   1,   1,   1,   1,   1,   1,   1],//16
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  12,  12,   3,   3,   3,   3,   1,   1,   1,   1,   1,   1,   1,   1],//17
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  50,   3,   3,   3,   3,   1,   1,   1,   1,   1,   1,   1,   1],//18
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   3,   3,   3,   3,   1,   1,   1,   1,   1,   1,   1,   1],//19
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  50,  12,  12,   1,   1,   1,   1,   1,   1,   1,   1],//20
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  12,  12,   1,   1,   1,   1,   1,   1,   1,   1],//21
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  50,   1,   1,   1,   1,   1,   1,   1,   1],//22
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   1,   1,   1,   1,   1,   1,   1],//23
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  50,  12,  12,   3,   3,   3,   3],//24
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  12,  12,   3,   3,   3,   3],//25
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  50,   3,   3,   3,   3],//26
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   3,   3,   3,   3],//27
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  50,  12,  12],//28
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  12,  12],//29
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  50],//30
        vec![  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  00],//30
    ];
    let path = Path::new("experiment-topology.txt");
    let display = path.display();

    let mut file = match File::create(&path) {
        Err(why) => panic!("{}", why.to_string()),
        Ok(file) => file,
    };

    match node_writer(&mut file, &topology5) {
        Ok(n1) => match link_writer(&mut file, &topology5) {
            Ok(n2) => println!("Written {} bytes to {}", n1 + n2, display),
            Err(why) => println!("{}", why.to_string()),
        },
        Err(why) => println!("{}", why.to_string()),
    }
}
